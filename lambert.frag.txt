#version 330 core

in vec3 Normal;
in vec3 FragPos;

out vec4 frag_colour;

uniform vec3 lightPosition;
uniform vec3 lightColor;

//Camera Position
uniform vec3 viewPos;


void main () {
    float ambientStrenght = 0.1;
    vec3 ambient = ambientStrenght * lightColor;

    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPosition - FragPos);
    float diff = max(dot(norm, lightDir),0.0);
    vec3 diffuse = diff * lightColor;


    vec3 result = (ambient + diffuse ) * vec3(0.385, 0.647, 0.812);
    frag_colour = vec4(result, 1.0);
    //frag_colour = vec4(normalize(Normal) * 0.5 + 0.5, 1.0);
}